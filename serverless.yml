# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: pili

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs4.3
  region: us-west-2
#  stage: dev

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  graphql:
    handler: handler.graphql
    events:
      - http:
          path: graphql
          method: post

# you can add CloudFormation resource templates here
resources:
  Resources:
    ShortURLs:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ShortURLs
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: owner
            AttributeType: S
          -
            AttributeName: short_code
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 3
        GlobalSecondaryIndexes:
          -
            IndexName: OwnerShortCode
            KeySchema:
              -
                AttributeName: owner
                KeyType: HASH
              -
                AttributeName: short_code
                KeyType: RANGE
            Projection:
              NonKeyAttributes:
                - "url"
              ProjectionType: INCLUDE
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 3


#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
